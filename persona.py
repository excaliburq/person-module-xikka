from .. import loader, utils

@loader.tds
class PersonaBuilder(loader.Module):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–º–∏"""

    strings = {"name": "PersonaBuilder"}

    def __init__(self):
        self.in_progress = {}  # {user_id: {data}}
        self.personas = {}     # {user_id: [persona1, persona2, ...]}

    @loader.command()
    async def —Å–æ–∑–¥–∞—Ç—å–ø(self, message):
        """–ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø–µ—Ä—Å–æ–Ω—ã"""
        uid = message.sender_id
        self.in_progress[uid] = {
            "–ò–º—è": None,
            "–ü–æ–ª": None,
            "–í–æ–∑—Ä–∞—Å—Ç": None,
            "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç": None,
            "–ù–∞–≤—ã–∫–∏": None
        }
        await message.edit(
            "üÜï –ù–∞—á–∞—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø–µ—Ä—Å–æ–Ω—ã!\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "‚Ä¢ !–∏–º—è\n‚Ä¢ !—Å—Ç–∞—Ç—å\n‚Ä¢ !–≤–æ–∑–≤—Ä–∞—Å—Ç\n‚Ä¢ !—á—Ç–æ–¥–µ–ª–∞–µ—Ç\n‚Ä¢ !–Ω–∞–≤—ã–∫–∏\n‚Ä¢ !–∑–∞–∫–æ–Ω—á–∏—Ç—å"
        )

    @loader.command()
    async def –∏–º—è(self, message):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–º—è –ø–µ—Ä—Å–æ–Ω—ã: !–∏–º—è –ú–∏—à–∞"""
        uid = message.sender_id
        if uid not in self.in_progress:
            return await message.edit("‚ùó –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏ —Å !—Å–æ–∑–¥–∞—Ç—å–ø")

        name = utils.get_args_raw(message).strip()
        if not name:
            return await message.edit("‚ùó –£–∫–∞–∂–∏ –∏–º—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: !–∏–º—è –ö–∞—Ç—è")

        self.in_progress[uid]["–ò–º—è"] = name
        await message.edit(f"‚úÖ –ò–º—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: <b>{name}</b>", parse_mode="html")

    @loader.command()
    async def —Å—Ç–∞—Ç—å(self, message):
        """–£–∫–∞–∑–∞—Ç—å –ø–æ–ª: !—Å—Ç–∞—Ç—å –¥–µ–≤—É—à–∫–∞/–ø–∞—Ä–µ–Ω—å"""
        uid = message.sender_id
        if uid not in self.in_progress:
            return await message.edit("‚ùó –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π !—Å–æ–∑–¥–∞—Ç—å–ø")

        gender = utils.get_args_raw(message).strip().capitalize()
        if gender not in ["–ü–∞—Ä–µ–Ω—å", "–î–µ–≤—É—à–∫–∞"]:
            return await message.edit("‚ùó –£–∫–∞–∂–∏: –ø–∞—Ä–µ–Ω—å –∏–ª–∏ –¥–µ–≤—É—à–∫–∞")

        self.in_progress[uid]["–ü–æ–ª"] = gender
        await message.edit(f"‚úÖ –ü–æ–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {gender}")

    @loader.command()
    async def –≤–æ–∑–≤—Ä–∞—Å—Ç(self, message):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç: !–≤–æ–∑–≤—Ä–∞—Å—Ç 18"""
        uid = message.sender_id
        if uid not in self.in_progress:
            return await message.edit("‚ùó –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π !—Å–æ–∑–¥–∞—Ç—å–ø")

        age = utils.get_args_raw(message).strip()
        if not age.isdigit():
            return await message.edit("‚ùó –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")

        self.in_progress[uid]["–í–æ–∑—Ä–∞—Å—Ç"] = int(age)
        await message.edit(f"üìÖ –í–æ–∑—Ä–∞—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {age}")

    @loader.command()
    async def —á—Ç–æ–¥–µ–ª–∞–µ—Ç(self, message):
        """–û–ø–∏—Å–∞–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: !—á—Ç–æ–¥–µ–ª–∞–µ—Ç –ü–∏—à–µ—Ç –±–æ—Ç—ã"""
        uid = message.sender_id
        if uid not in self.in_progress:
            return await message.edit("‚ùó –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π !—Å–æ–∑–¥–∞—Ç—å–ø")

        text = utils.get_args_raw(message).strip()
        if not text:
            return await message.edit("‚ùó –£–∫–∞–∂–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π")

        self.in_progress[uid]["–ß—Ç–æ –¥–µ–ª–∞–µ—Ç"] = text
        await message.edit("üíº –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")

    @loader.command()
    async def –Ω–∞–≤—ã–∫–∏(self, message):
        """–°–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤: !–Ω–∞–≤—ã–∫–∏ Python, —Ö–∞—Ä–∏–∑–º–∞"""
        uid = message.sender_id
        if uid not in self.in_progress:
            return await message.edit("‚ùó –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π !—Å–æ–∑–¥–∞—Ç—å–ø")

        text = utils.get_args_raw(message).strip()
        if not text:
            return await message.edit("‚ùó –£–∫–∞–∂–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –Ω–∞–≤—ã–∫")

        self.in_progress[uid]["–ù–∞–≤—ã–∫–∏"] = text
        await message.edit("üß† –ù–∞–≤—ã–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

    @loader.command()
    async def –∑–∞–∫–æ–Ω—á–∏—Ç—å(self, message):
        """–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å"""
        uid = message.sender_id
        if uid not in self.in_progress:
            return await message.edit("‚ùó –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π !—Å–æ–∑–¥–∞—Ç—å–ø")

        persona = self.in_progress.pop(uid)
        if None in persona.values():
            return await message.edit("‚ùó –ó–∞–ø–æ–ª–Ω–∏ –≤—Å–µ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º.")

        if uid not in self.personas:
            self.personas[uid] = []

        self.personas[uid].append(persona)

        text = "‚úÖ –ü–µ—Ä—Å–æ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞:\n\n"
        for key, value in persona.items():
            text += f"<b>{key}:</b> {value}\n"

        await message.edit(text, parse_mode="html")

    @loader.command()
    async def —Å–ø–∏—Å–æ–∫–ø–µ—Ä—Å–æ–Ω(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö —Ç–≤–æ–∏—Ö –ø–µ—Ä—Å–æ–Ω"""
        uid = message.sender_id
        if uid not in self.personas or not self.personas[uid]:
            return await message.edit("üì≠ –£ —Ç–µ–±—è –µ—â—ë –Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω.")

        text = "<b>üìã –¢–≤–æ–∏ –ø–µ—Ä—Å–æ–Ω—ã:</b>\n\n"
        for i, persona in enumerate(self.personas[uid], start=1):
            text += f"<b>–ü–µ—Ä—Å–æ–Ω–∞ {i}:</b>\n"
            for key, value in persona.items():
                text += f"‚Ä¢ <b>{key}:</b> {value}\n"
            text += "\n"

        await message.edit(text, parse_mode="html")

